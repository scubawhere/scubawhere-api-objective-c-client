#import <Foundation/Foundation.h>
#import "SWGTrainingSession.h"
#import "SWGErrorModel.h"
#import "SWGInlineResponse20019.h"
#import "SWGInlineResponse2003.h"
#import "SWGInlineResponse20020.h"
#import "SWGTrainingSessionManifest.h"
#import "SWGApi.h"

/**
* Scubawhere API Documentation
* This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
*
* OpenAPI spec version: 1.0.0
* Contact: bryan@scubawhere.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGClasssessionApi: NSObject <SWGApi>

extern NSString* kSWGClasssessionApiErrorDomain;
extern NSInteger kSWGClasssessionApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Retrieve a class session by ID
/// 
///
/// @param _id 
/// 
///  code:200 message:"Success (Resource Found)",
///  code:404 message:"Not Found (No timetable with that ID exists)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGTrainingSession*
-(NSNumber*) classSessionGetWithId: (NSNumber*) _id
    completionHandler: (void (^)(SWGTrainingSession* output, NSError* error)) handler;


/// Create a new class session
/// 
///
/// @param start 
/// @param trainingId 
/// 
///  code:200 message:"Success (Resource created)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse20019*
-(NSNumber*) createClassSessionWithStart: (NSDate*) start
    trainingId: (NSNumber*) trainingId
    completionHandler: (void (^)(SWGInlineResponse20019* output, NSError* error)) handler;


/// Delete a class session by ID
/// 
///
/// @param _id 
/// 
///  code:200 message:"Success (Resource was deleted)",
///  code:404 message:"Not found (No package exists with the ID provided)"
///
/// @return SWGInlineResponse2003*
-(NSNumber*) deleteClasssessionWithId: (NSNumber*) _id
    completionHandler: (void (^)(SWGInlineResponse2003* output, NSError* error)) handler;


/// Update a class session by ID
/// 
///
/// @param _id 
/// @param start 
/// 
///  code:200 message:"Success (Resource created)",
///  code:404 message:"Not found (No boatroom with the ID provided)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse20020*
-(NSNumber*) editClassSessionWithId: (NSNumber*) _id
    start: (NSDate*) start
    completionHandler: (void (^)(SWGInlineResponse20020* output, NSError* error)) handler;


/// Retrieve all class sessions that match a filter
/// 
///
/// 
///  code:200 message:"Success (Resource Found)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return NSArray<SWGTrainingSession>*
-(NSNumber*) filterClassSessionWithCompletionHandler: 
    (void (^)(NSArray<SWGTrainingSession>* output, NSError* error)) handler;


/// Retrieve all class sessions including any deleted models
/// 
///
/// 
///  code:200 message:"Success (Resource Found)"
///
/// @return NSArray<SWGTrainingSession>*
-(NSNumber*) getAllClassSessionsWithCompletionHandler: 
    (void (^)(NSArray<SWGTrainingSession>* output, NSError* error)) handler;


/// Retrieve all class sessions including any deleted models
/// 
///
/// 
///  code:200 message:"Success (Resource Found)"
///
/// @return NSArray<SWGTrainingSession>*
-(NSNumber*) getAllWithTrashedClassSessionsWithCompletionHandler: 
    (void (^)(NSArray<SWGTrainingSession>* output, NSError* error)) handler;


/// Retrieve the customer manifest for a class session
/// 
///
/// @param _id 
/// 
///  code:200 message:"Success (Resource Found)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGTrainingSessionManifest*
-(NSNumber*) getClassSessionManifestWithId: (NSNumber*) _id
    completionHandler: (void (^)(SWGTrainingSessionManifest* output, NSError* error)) handler;


/// Retrieve all class sessions that start today
/// 
///
/// 
///  code:200 message:"Success (Resource Found)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return NSArray<SWGTrainingSession>*
-(NSNumber*) getTodaysClassSessionWithCompletionHandler: 
    (void (^)(NSArray<SWGTrainingSession>* output, NSError* error)) handler;


/// Retrieve all class sessions that start tommorow
/// 
///
/// 
///  code:200 message:"Success (Resource Found)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return NSArray<SWGTrainingSession>*
-(NSNumber*) getTommorowsClassSessionWithCompletionHandler: 
    (void (^)(NSArray<SWGTrainingSession>* output, NSError* error)) handler;



@end
