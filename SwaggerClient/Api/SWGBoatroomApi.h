#import <Foundation/Foundation.h>
#import "SWGInlineResponse2006.h"
#import "SWGErrorModel.h"
#import "SWGInlineResponse2003.h"
#import "SWGBoatroom.h"
#import "SWGApi.h"

/**
* Scubawhere API Documentation
* This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
*
* OpenAPI spec version: 1.0.0
* Contact: bryan@scubawhere.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGBoatroomApi: NSObject <SWGApi>

extern NSString* kSWGBoatroomApiErrorDomain;
extern NSInteger kSWGBoatroomApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Create a new boatroom
/// 
///
/// @param name 
/// @param _description  (optional)
/// 
///  code:200 message:"Success (Resource created)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse2006*
-(NSNumber*) createBoatroomWithName: (NSString*) name
    _description: (NSString*) _description
    completionHandler: (void (^)(SWGInlineResponse2006* output, NSError* error)) handler;


/// Delete a boatroom by ID
/// 
///
/// @param _id 
/// 
///  code:200 message:"Success (Resource was deleted)",
///  code:404 message:"Not found (No boatroom exists with the ID provided)"
///
/// @return SWGInlineResponse2003*
-(NSNumber*) deleteBoatroomWithId: (NSNumber*) _id
    completionHandler: (void (^)(SWGInlineResponse2003* output, NSError* error)) handler;


/// Update a boatroom by ID
/// 
///
/// @param _id 
/// @param name 
/// @param _description  (optional)
/// 
///  code:200 message:"Success (Resource created)",
///  code:404 message:"Not found (No boatroom with the ID provided)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse2006*
-(NSNumber*) editBoatroomWithId: (NSNumber*) _id
    name: (NSString*) name
    _description: (NSString*) _description
    completionHandler: (void (^)(SWGInlineResponse2006* output, NSError* error)) handler;


/// Retrieve all boatrooms
/// 
///
/// 
///  code:200 message:"Success"
///
/// @return NSArray<SWGBoatroom>*
-(NSNumber*) getAllBoatroomsWithCompletionHandler: 
    (void (^)(NSArray<SWGBoatroom>* output, NSError* error)) handler;


/// Retrieve all boatrooms including any deleted models
/// 
///
/// 
///  code:200 message:"Success"
///
/// @return NSArray<SWGBoatroom>*
-(NSNumber*) getAllWithTrashedBoatroomsWithCompletionHandler: 
    (void (^)(NSArray<SWGBoatroom>* output, NSError* error)) handler;


/// Retrieve a boatroom by ID
/// 
///
/// @param _id 
/// 
///  code:200 message:"Success (Resource was found)",
///  code:404 message:"Not found (No boat with the ID provided)",
///  code:422 message:"Unprocessable Entity (ID was not provided)"
///
/// @return SWGInlineResponse2006*
-(NSNumber*) getBoatroomWithId: (NSNumber*) _id
    completionHandler: (void (^)(SWGInlineResponse2006* output, NSError* error)) handler;



@end
