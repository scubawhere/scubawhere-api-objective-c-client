#import <Foundation/Foundation.h>
#import "SWGInlineResponse2014.h"
#import "SWGErrorModel.h"
#import "SWGBasePrice.h"
#import "SWGTicket.h"
#import "SWGApi.h"

/**
* Scubawhere API Documentation
* This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
*
* OpenAPI spec version: 1.0.0
* Contact: bryan@scubawhere.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGTicketApi: NSObject <SWGApi>

extern NSString* kSWGTicketApiErrorDomain;
extern NSInteger kSWGTicketApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Create a new ticket
/// 
///
/// @param name 
/// @param trips 
/// @param prices 
/// @param _description  (optional)
/// @param availableFrom  (optional)
/// @param availableUntil  (optional)
/// @param onlyPackaged  (optional)
/// @param boats  (optional)
/// @param boatrooms  (optional)
/// 
///  code:201 message:"Success (Resource Created)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse2014*
-(NSNumber*) addTicketWithName: (NSString*) name
    trips: (NSArray<NSNumber*>*) trips
    prices: (SWGBasePrice*) prices
    _description: (NSString*) _description
    availableFrom: (NSDate*) availableFrom
    availableUntil: (NSDate*) availableUntil
    onlyPackaged: (NSNumber*) onlyPackaged
    boats: (NSArray<NSNumber*>*) boats
    boatrooms: (NSArray<NSNumber*>*) boatrooms
    completionHandler: (void (^)(SWGInlineResponse2014* output, NSError* error)) handler;


/// Delete a ticket
/// 
///
/// @param name 
/// 
///  code:201 message:"Success (Resource Created)",
///  code:404 message:"Not Found (No schedule with that ID exists)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse2014*
-(NSNumber*) deleteTicketWithName: (NSString*) name
    completionHandler: (void (^)(SWGInlineResponse2014* output, NSError* error)) handler;


/// Update an existing ticket
/// 
///
/// @param _id 
/// @param name 
/// @param trips 
/// @param prices 
/// @param _description  (optional)
/// @param availableFrom  (optional)
/// @param availableUntil  (optional)
/// @param onlyPackaged  (optional)
/// @param boats  (optional)
/// @param boatrooms  (optional)
/// 
///  code:201 message:"Success (Resource Created)",
///  code:404 message:"Not Found (No schedule with that ID exists)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse2014*
-(NSNumber*) editTicketWithId: (NSNumber*) _id
    name: (NSString*) name
    trips: (NSArray<NSNumber*>*) trips
    prices: (SWGBasePrice*) prices
    _description: (NSString*) _description
    availableFrom: (NSDate*) availableFrom
    availableUntil: (NSDate*) availableUntil
    onlyPackaged: (NSNumber*) onlyPackaged
    boats: (NSArray<NSNumber*>*) boats
    boatrooms: (NSArray<NSNumber*>*) boatrooms
    completionHandler: (void (^)(SWGInlineResponse2014* output, NSError* error)) handler;


/// Retrieve all tickets that are available to booked today
/// 
///
/// 
///  code:200 message:"Success (Resource Found)"
///
/// @return NSArray<SWGTicket>*
-(NSNumber*) getAllAvailableTicketsWithCompletionHandler: 
    (void (^)(NSArray<SWGTicket>* output, NSError* error)) handler;


/// Retrieve all tickets
/// 
///
/// 
///  code:200 message:"Success (Resource Found)"
///
/// @return NSArray<SWGTicket>*
-(NSNumber*) getAllTicketsWithCompletionHandler: 
    (void (^)(NSArray<SWGTicket>* output, NSError* error)) handler;


/// Retrieve all tickets
/// 
///
/// 
///  code:200 message:"Success (Resource Found)"
///
/// @return NSArray<SWGTicket>*
-(NSNumber*) getAllWithTrashedTicketsWithCompletionHandler: 
    (void (^)(NSArray<SWGTicket>* output, NSError* error)) handler;


/// Retrieve a ticket by ID
/// 
///
/// @param _id 
/// 
///  code:200 message:"Success (Resource Found)",
///  code:404 message:"Not Found (No schedule with that ID exists)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGTicket*
-(NSNumber*) getTicketWithId: (NSNumber*) _id
    completionHandler: (void (^)(SWGTicket* output, NSError* error)) handler;



@end
