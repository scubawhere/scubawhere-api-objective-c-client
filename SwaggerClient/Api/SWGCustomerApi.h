#import <Foundation/Foundation.h>
#import "SWGInlineResponse20029.h"
#import "SWGErrorModel.h"
#import "SWGInlineResponse2003.h"
#import "SWGInlineResponse20030.h"
#import "SWGCustomer.h"
#import "SWGApi.h"

/**
* Scubawhere API Documentation
* This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
*
* OpenAPI spec version: 1.0.0
* Contact: bryan@scubawhere.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGCustomerApi: NSObject <SWGApi>

extern NSString* kSWGCustomerApiErrorDomain;
extern NSInteger kSWGCustomerApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Create a new customer
/// 
///
/// @param email 
/// @param firstname 
/// @param lastname 
/// @param birthday  (optional)
/// @param gender  (optional)
/// @param address1  (optional)
/// @param address2  (optional)
/// @param city  (optional)
/// @param county  (optional)
/// @param postcode  (optional)
/// @param countryId  (optional)
/// @param phone  (optional)
/// @param lastDive  (optional)
/// @param numberOfDives  (optional)
/// @param chestSize  (optional)
/// @param showSize  (optional)
/// @param height  (optional)
/// @param certificates  (optional)
/// 
///  code:200 message:"Success (Resource created)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse20029*
-(NSNumber*) createCustomerWithEmail: (NSString*) email
    firstname: (NSString*) firstname
    lastname: (NSString*) lastname
    birthday: (NSDate*) birthday
    gender: (NSNumber*) gender
    address1: (NSString*) address1
    address2: (NSString*) address2
    city: (NSString*) city
    county: (NSString*) county
    postcode: (NSString*) postcode
    countryId: (NSNumber*) countryId
    phone: (NSString*) phone
    lastDive: (NSDate*) lastDive
    numberOfDives: (NSNumber*) numberOfDives
    chestSize: (NSString*) chestSize
    showSize: (NSString*) showSize
    height: (NSString*) height
    certificates: (NSArray<NSNumber*>*) certificates
    completionHandler: (void (^)(SWGInlineResponse20029* output, NSError* error)) handler;


/// Delete a customer by ID
/// 
///
/// @param _id 
/// 
///  code:200 message:"Success (Resource was deleted)",
///  code:404 message:"Not found (No customer exists with the ID provided)"
///
/// @return SWGInlineResponse2003*
-(NSNumber*) deleteCustomerWithId: (NSNumber*) _id
    completionHandler: (void (^)(SWGInlineResponse2003* output, NSError* error)) handler;


/// Update a customer by ID
/// 
///
/// @param _id 
/// @param email  (optional)
/// @param firstname  (optional)
/// @param lastname  (optional)
/// @param birthday  (optional)
/// @param gender  (optional)
/// @param address1  (optional)
/// @param address2  (optional)
/// @param city  (optional)
/// @param county  (optional)
/// @param postcode  (optional)
/// @param countryId  (optional)
/// @param phone  (optional)
/// @param lastDive  (optional)
/// @param numberOfDives  (optional)
/// @param chestSize  (optional)
/// @param showSize  (optional)
/// @param height  (optional)
/// @param certificates  (optional)
/// 
///  code:200 message:"Success (Resource updated)",
///  code:404 message:"Not found (No customer with the ID provided)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse20030*
-(NSNumber*) editCustomerWithId: (NSNumber*) _id
    email: (NSString*) email
    firstname: (NSString*) firstname
    lastname: (NSString*) lastname
    birthday: (NSDate*) birthday
    gender: (NSNumber*) gender
    address1: (NSString*) address1
    address2: (NSString*) address2
    city: (NSString*) city
    county: (NSString*) county
    postcode: (NSString*) postcode
    countryId: (NSNumber*) countryId
    phone: (NSString*) phone
    lastDive: (NSDate*) lastDive
    numberOfDives: (NSNumber*) numberOfDives
    chestSize: (NSString*) chestSize
    showSize: (NSString*) showSize
    height: (NSString*) height
    certificates: (NSArray<NSNumber*>*) certificates
    completionHandler: (void (^)(SWGInlineResponse20030* output, NSError* error)) handler;


/// Retrieve all customers
/// 
///
/// 
///  code:200 message:"Success"
///
/// @return NSArray<SWGCustomer>*
-(NSNumber*) getAllCustomersWithCompletionHandler: 
    (void (^)(NSArray<SWGCustomer>* output, NSError* error)) handler;


/// Retrieve a customer by ID
/// 
///
/// @param _id  (optional)
/// 
///  code:200 message:"Success (Resource was found)",
///  code:404 message:"Not found (No course exists with the ID provided)",
///  code:422 message:"Unproccessable Entity (One or more of the parameters was invalid)"
///
/// @return SWGInlineResponse20029*
-(NSNumber*) getCustomerWithId: (NSNumber*) _id
    completionHandler: (void (^)(SWGInlineResponse20029* output, NSError* error)) handler;



@end
