#import <Foundation/Foundation.h>
#import "SWGInlineResponse20040.h"
#import "SWGErrorModel.h"
#import "SWGInlineResponse20041.h"
#import "SWGInlineResponse20042.h"
#import "SWGApi.h"

/**
* Scubawhere API Documentation
* This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
*
* OpenAPI spec version: 1.0.0
* Contact: bryan@scubawhere.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGReportApi: NSObject <SWGApi>

extern NSString* kSWGReportApiErrorDomain;
extern NSInteger kSWGReportApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Get a report containing the distribution of revenue made from all the tickets, packages, courses, addons, accommodations
/// 
///
/// @param after 
/// @param before 
/// 
///  code:200 message:"Success (Resource found)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse20040*
-(NSNumber*) getRevenueStreamReportWithAfter: (NSDate*) after
    before: (NSDate*) before
    completionHandler: (void (^)(SWGInlineResponse20040* output, NSError* error)) handler;


/// Get a report about the distribution of revenue between the diffrent source of bookings
/// 
///
/// @param after 
/// @param before 
/// 
///  code:200 message:"Success (Resource Found)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse20041*
-(NSNumber*) getSourcesReportWithAfter: (NSDate*) after
    before: (NSDate*) before
    completionHandler: (void (^)(SWGInlineResponse20041* output, NSError* error)) handler;


/// Get a report containing the utilisation of all classes between the specified dates
/// 
///
/// @param after 
/// @param before 
/// 
///  code:200 message:"Success (Resource found)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse20042*
-(NSNumber*) getTrainingUtilisationReportWithAfter: (NSDate*) after
    before: (NSDate*) before
    completionHandler: (void (^)(SWGInlineResponse20042* output, NSError* error)) handler;


/// Get a report containing the utilisation of all trips between the specified dates
/// 
///
/// @param after 
/// @param before 
/// 
///  code:200 message:"Success (Resource found)",
///  code:422 message:"Unprocessable Entity (One or more parameter was invalid)"
///
/// @return SWGInlineResponse20042*
-(NSNumber*) getUtilisationReportWithAfter: (NSDate*) after
    before: (NSDate*) before
    completionHandler: (void (^)(SWGInlineResponse20042* output, NSError* error)) handler;



@end
