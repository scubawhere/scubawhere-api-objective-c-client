#import <Foundation/Foundation.h>
#import <ISO8601/ISO8601.h>
#import <AFNetworking/AFNetworking.h>
#import "SWGJSONResponseSerializer.h"
#import "SWGJSONRequestSerializer.h"
#import "SWGQueryParamCollection.h"
#import "SWGConfiguration.h"
#import "SWGResponseDeserializer.h"
#import "SWGSanitizer.h"
#import "SWGLogger.h"

/**
* Scubawhere API Documentation
* This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
*
* OpenAPI spec version: 1.0.0
* Contact: bryan@scubawhere.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

#import "SWGAccommodation.h"
#import "SWGAddon.h"
#import "SWGAgent.h"
#import "SWGBasePrice.h"
#import "SWGBoat.h"
#import "SWGBoatroom.h"
#import "SWGBooking.h"
#import "SWGCompany.h"
#import "SWGCountry.h"
#import "SWGCourse.h"
#import "SWGCurrency.h"
#import "SWGCustomer.h"
#import "SWGDateRange.h"
#import "SWGErrorModel.h"
#import "SWGInlineResponse200.h"
#import "SWGInlineResponse2001.h"
#import "SWGInlineResponse20010.h"
#import "SWGInlineResponse20011.h"
#import "SWGInlineResponse20012.h"
#import "SWGInlineResponse20013.h"
#import "SWGInlineResponse20014.h"
#import "SWGInlineResponse20015.h"
#import "SWGInlineResponse20016.h"
#import "SWGInlineResponse20017.h"
#import "SWGInlineResponse20018.h"
#import "SWGInlineResponse20019.h"
#import "SWGInlineResponse2002.h"
#import "SWGInlineResponse20020.h"
#import "SWGInlineResponse20021.h"
#import "SWGInlineResponse20022.h"
#import "SWGInlineResponse20023.h"
#import "SWGInlineResponse20024.h"
#import "SWGInlineResponse20025.h"
#import "SWGInlineResponse20026.h"
#import "SWGInlineResponse20027.h"
#import "SWGInlineResponse20028.h"
#import "SWGInlineResponse20029.h"
#import "SWGInlineResponse2003.h"
#import "SWGInlineResponse20030.h"
#import "SWGInlineResponse20031.h"
#import "SWGInlineResponse20032.h"
#import "SWGInlineResponse20033.h"
#import "SWGInlineResponse20034.h"
#import "SWGInlineResponse20035.h"
#import "SWGInlineResponse20036.h"
#import "SWGInlineResponse20037.h"
#import "SWGInlineResponse20038.h"
#import "SWGInlineResponse20039.h"
#import "SWGInlineResponse2004.h"
#import "SWGInlineResponse20040.h"
#import "SWGInlineResponse20041.h"
#import "SWGInlineResponse20042.h"
#import "SWGInlineResponse20042Utilisation.h"
#import "SWGInlineResponse20042UtilisationTotals.h"
#import "SWGInlineResponse20043.h"
#import "SWGInlineResponse20044.h"
#import "SWGInlineResponse20045.h"
#import "SWGInlineResponse20046.h"
#import "SWGInlineResponse20047.h"
#import "SWGInlineResponse2005.h"
#import "SWGInlineResponse2006.h"
#import "SWGInlineResponse2007.h"
#import "SWGInlineResponse2008.h"
#import "SWGInlineResponse2009.h"
#import "SWGInlineResponse201.h"
#import "SWGInlineResponse2011.h"
#import "SWGInlineResponse2012.h"
#import "SWGInlineResponse2013.h"
#import "SWGInlineResponse2014.h"
#import "SWGInlineResponse2015.h"
#import "SWGLocation.h"
#import "SWGPackage.h"
#import "SWGPayment.h"
#import "SWGPaymentGateway.h"
#import "SWGPickup.h"
#import "SWGRefund.h"
#import "SWGReportEntry.h"
#import "SWGReportEntryTotal.h"
#import "SWGSchedule.h"
#import "SWGSession.h"
#import "SWGTag.h"
#import "SWGTicket.h"
#import "SWGTimetable.h"
#import "SWGTraining.h"
#import "SWGTrainingSession.h"
#import "SWGTrainingSessionManifest.h"
#import "SWGTrainingSessionManifestCapacity.h"
#import "SWGTrip.h"



@class SWGConfiguration;

/**
 * A key for `NSError` user info dictionaries.
 *
 * The corresponding value is the parsed response body for an HTTP error.
 */
extern NSString *const SWGResponseObjectErrorKey;

@interface SWGApiClient : AFHTTPSessionManager

@property(nonatomic, assign) NSURLRequestCachePolicy cachePolicy;
@property(nonatomic, assign) NSTimeInterval timeoutInterval;
@property(nonatomic, readonly) NSOperationQueue* queue;

/// In order to ensure the HTTPResponseHeaders are correct, it is recommended to initialize one SWGApiClient instance per thread.
@property(nonatomic, readonly) NSDictionary* HTTPResponseHeaders;

@property(nonatomic, strong) id<SWGResponseDeserializer> responseDeserializer;

@property(nonatomic, strong) id<SWGSanitizer> sanitizer;
/**
 * Clears Cache
 */
+(void)clearCache;

/**
 * Turns on cache
 *
 * @param enabled If the cached is enable, must be `YES` or `NO`
 */
+(void)setCacheEnabled:(BOOL) enabled;

/**
 * Gets the request queue size
 *
 * @return The size of `queuedRequests` static variable.
 */
+(NSUInteger)requestQueueSize;

/**
 * Sets the client unreachable
 *
 * @param state off line state, must be `YES` or `NO`
 */
+(void) setOfflineState:(BOOL) state;

/**
 * Gets if the client is unreachable
 *
 * @return The client offline state
 */
+(BOOL) getOfflineState;

/**
 * Sets the client reachability, this may be overridden by the reachability manager if reachability changes
 *
 * @param The client reachability.
 */
+(void) setReachabilityStatus:(AFNetworkReachabilityStatus) status;

/**
 * Gets the client reachability
 *
 * @return The client reachability.
 */
+(AFNetworkReachabilityStatus) getReachabilityStatus;

/**
 * Gets the next request id
 *
 * @return The next executed request id.
 */
+(NSNumber*) nextRequestId;

/**
 * Generates request id and add it to the queue
 *
 * @return The next executed request id.
 */
+(NSNumber*) queueRequest;

/**
 * Removes request id from the queue
 *
 * @param requestId The request which will be removed.
 */
+(void) cancelRequest:(NSNumber*)requestId;

/**
 * Customizes the behavior when the reachability changed
 *
 * @param changeBlock The block will be executed when the reachability changed.
 */
+(void) setReachabilityChangeBlock:(void(^)(int))changeBlock;

/**
 * Sets the api client reachability strategy
 */
- (void)configureCacheReachibility;

/**
 * Sets header for request
 *
 * @param value The header value
 * @param forKey The header key
 */
-(void)setHeaderValue:(NSString*) value
               forKey:(NSString*) forKey;

/**
 * Updates header parameters and query parameters for authentication
 *
 * @param headers The header parameter will be udpated, passed by pointer to pointer.
 * @param querys The query parameters will be updated, passed by pointer to pointer.
 * @param authSettings The authentication names NSArray.
 */
- (void) updateHeaderParams:(NSDictionary **)headers
                queryParams:(NSDictionary **)querys
           WithAuthSettings:(NSArray *)authSettings;

/**
 * Performs request
 *
 * @param path Request url.
 * @param method Request method.
 * @param pathParams Request path parameters.
 * @param queryParams Request query parameters.
 * @param body Request body.
 * @param headerParams Request header parameters.
 * @param authSettings Request authentication names.
 * @param requestContentType Request content-type.
 * @param responseContentType Response content-type.
 * @param completionBlock The block will be executed when the request completed.
 *
 * @return The request id.
 */
-(NSNumber*) requestWithPath:(NSString*) path
                      method:(NSString*) method
                  pathParams:(NSDictionary *) pathParams
                 queryParams:(NSDictionary*) queryParams
                  formParams:(NSDictionary *) formParams
                       files:(NSDictionary *) files
                        body:(id) body
                headerParams:(NSDictionary*) headerParams
                authSettings:(NSArray *) authSettings
          requestContentType:(NSString*) requestContentType
         responseContentType:(NSString*) responseContentType
                responseType:(NSString *) responseType
             completionBlock:(void (^)(id, NSError *))completionBlock;

/**
 * Custom security policy
 *
 * @return AFSecurityPolicy
 */
- (AFSecurityPolicy *) customSecurityPolicy;

/**
 * SWGConfiguration return sharedConfig
 *
 * @return SWGConfiguration
 */
- (SWGConfiguration*) configuration;


@end
